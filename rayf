local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Untitled tag game Script",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Annonmy",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = Utgsfiles, -- Create a custom folder for your hub/game
      FileName = "Utgfile"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Mainz", 4483362458) -- Title, Image
local Section = Tab:CreateSection("auto")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local autotagEnabled = false
local teamCheckEnabled = false
local legitTagEnabled = false

-- Fungsi untuk memeriksa apakah pemain ada dalam folder PlayerHighlights
local function checkPlayerInHighlights(targetPlayer)
    -- Cari folder PlayerHighlights di Workspace
    local playerHighlightsFolder = workspace:FindFirstChild("PlayerHighlights")
    if not playerHighlightsFolder then
        return false -- Jika folder tidak ditemukan, tidak ada pemain yang boleh di-tag
    end

    -- Cek apakah pemain ada dalam folder PlayerHighlights
    local targetPlayerName = targetPlayer.Name
    local playerModel = playerHighlightsFolder:FindFirstChild(targetPlayerName)
    if playerModel then
        return true -- Jika nama pemain ditemukan di dalam folder PlayerHighlights, izinkan tagging
    end

    return false -- Jika nama pemain tidak ditemukan, jangan izinkan tagging
end

local function getClosestPlayer()
      local closestPlayer = nil
      local shortestDistance = math.huge
      local maxDistance = 7 -- Jarak maksimum yang diizinkan untuk tagging

      -- Dapatkan posisi karakter saya
      local localCharacter = LocalPlayer.Character
      if not localCharacter or not localCharacter:FindFirstChild("HumanoidRootPart") then
          return nil
      end
      local localPosition = localCharacter.HumanoidRootPart.Position

      -- Loop melalui semua pemain
      for _, targetPlayer in pairs(Players:GetPlayers()) do
          if targetPlayer ~= LocalPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
              -- Cek apakah pemain target memiliki PlayerRole "Dead"
              local targetPlayerRole = targetPlayer:FindFirstChild("PlayerRole")
              if targetPlayerRole and targetPlayerRole.Value == "Dead" then
                  continue -- Lewati pemain dengan PlayerRole "Dead"
              end

              -- Cek tim jika teamCheckEnabled aktif
              if teamCheckEnabled then
                  local localPlayerTeam = LocalPlayer.Team
                  local targetPlayerTeam = targetPlayer.Team
                  if localPlayerTeam == targetPlayerTeam then
                      continue -- Lewati pemain dalam tim yang sama
                  end
              end

              -- Dapatkan posisi pemain target
              local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
              local distance = (localPosition - targetPosition).Magnitude

              -- Hanya pertimbangkan pemain dalam jarak 7 studs
              if distance <= maxDistance then
                  -- Jika pemain dalam jangkauan, lakukan raycast
                  local raycastParams = RaycastParams.new()
                  raycastParams.FilterDescendantsInstances = {localCharacter, targetPlayer.Character}
                  raycastParams.FilterType = Enum.RaycastFilterType.Exclude

                  local raycastResult = workspace:Raycast(localPosition, (targetPosition - localPosition).Unit * maxDistance, raycastParams)
                  if raycastResult and raycastResult.Instance:IsDescendantOf(targetPlayer.Character) then
                      -- Jika raycast mengenai pemain target, periksa keberadaan pemain dalam PlayerHighlights
                      if checkPlayerInHighlights(targetPlayer) then
                          closestPlayer = targetPlayer
                          shortestDistance = distance
                      end
                  end
              end
          end
      end

      return closestPlayer
  end

-- Fungsi untuk melakukan fire langsung ke pemain terdekat
local function autoFireClosestPlayer()
    local closestPlayer = getClosestPlayer()
    if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Humanoid") then
        -- Panggil checkPlayerInHighlights untuk memastikan pengecekan terbaru
        if checkPlayerInHighlights(closestPlayer) then
            -- Buat args sesuai contoh yang diberikan
            local args = {
                [1] = closestPlayer.Character.Humanoid, -- Humanoid pemain terdekat
                [2] = closestPlayer.Character.HumanoidRootPart.Position -- Posisi pemain terdekat
            }

            -- Fire tag pemain terdekat
            ReplicatedStorage.Events.game.tags.TagPlayer:InvokeServer(unpack(args))
        else
            warn("Player is not a valid target for tagging.")
        end
    else
        warn("No valid player found to tag.")
    end
end

-- Fungsi untuk memantau perubahan pada PlayerHighlights
local function monitorPlayerHighlights()
    local playerHighlightsFolder = workspace:FindFirstChild("PlayerHighlights")
    if playerHighlightsFolder then
        -- Pantau perubahan pada PlayerHighlights
        playerHighlightsFolder.ChildAdded:Connect(function(child)
            print("Player added to PlayerHighlights folder:", child.Name)
            -- Lakukan pengecekan ulang atau tindakan lain
        end)

        playerHighlightsFolder.ChildRemoved:Connect(function(child)
            print("Player removed from PlayerHighlights folder:", child.Name)
            -- Lakukan pengecekan ulang atau tindakan lain
        end)
    end
end

-- Mulai pemantauan PlayerHighlights
monitorPlayerHighlights()

local Toggle1 = Tab:CreateToggle({
    Name = "Auto tag",
    CurrentValue = false,
    Flag = "AutoTagToggle",
    Callback = function(Value)
        autotagEnabled = Value
        if Value then
            -- Mulai loop auto tag
            task.spawn(function()
                while autotagEnabled do
                    -- Cek Gamemode sebelum melakukan tagging
                    local gamemodeValue = ReplicatedStorage:FindFirstChild("Values")
                    local gamemode = gamemodeValue and gamemodeValue:FindFirstChild("Gamemode") and gamemodeValue.Gamemode.Value
                    local myPlayerRole = LocalPlayer:FindFirstChild("PlayerRole") and LocalPlayer.PlayerRole.Value

                    -- Jika Gamemode adalah Voting/Votings/Intermission, hentikan auto tag sementara
                    if gamemode == "Voting" or gamemode == "Votings" or gamemode == "Intermission" then
                        task.wait(1) -- Tunggu 1 detik dan lanjutkan loop
                        continue
                    end

                    -- Logika baru: Jika Gamemode bukan Chaos/Crown/SoloCrown dan saya Dead, hentikan tagging
                    if myPlayerRole == "Dead" and not (gamemode == "Chaos" or gamemode == "Crown" or gamemode == "SoloCrown") then
                        task.wait(1) -- Tunggu 1 detik dan lanjutkan loop
                        continue
                    end

                    -- Fire pemain terdekat langsung
                    autoFireClosestPlayer()

                    -- Tunggu sedikit untuk menghindari overload server
                    local waitTime = legitTagEnabled and math.random(2, 3) * 0.1 or 0.3
                    task.wait(waitTime)
                end
            end)
        else
            -- Hentikan semua pemantauan dan loop auto tag
            -- (Tidak perlu melakukan apa-apa karena semua fungsi sudah memiliki pengecekan autotagEnabled)
        end
    end
})

-- Toggle Team Check
local Toggle2 = Tab:CreateToggle({
    Name = "Team check",
    CurrentValue = false,
    Flag = "TeamCheckToggle",
    Callback = function(Value)
        teamCheckEnabled = Value
    end
})

-- Toggle Legit Tag
local Toggle3 = Tab:CreateToggle({
    Name = "Legit tag",
    CurrentValue = false,
    Flag = "LegitTagToggle",
    Callback = function(Value)
        legitTagEnabled = Value
    end
})

local Section = Tab:CreateSection("Hitbox")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local rootSizeEnabled = false -- Toggle utama
local humanoidRootPartSize = Vector3.new(2, 2, 1) -- Ukuran default
local humanoidRootPartTransparency = 0 -- Transparansi default
local humanoidRootPartMaterial = Enum.Material.SmoothPlastic -- Material default
local noGhostEnabled = false -- Toggle untuk No Ghost
local teamCheckEnabled = false -- Toggle untuk Team Check
local rainbowEnabled = true -- Toggle untuk warna pelangi

-- Function untuk membuat warna pelangi (rainbow)
local function getRainbowColor()
    local t = tick() % 5 -- Menghasilkan angka dari 0 sampai 5
    local hue = t / 5 -- Konversi ke rentang 0-1 untuk HSV
    local color = Color3.fromHSV(hue, 1, 1) -- Konversi HSV ke RGB
    return color
end

-- Function untuk mengatur ukuran, material, transparansi, dan warna HumanoidRootPart
local function updateHumanoidRootPart(character)
    if not rootSizeEnabled then return end -- Jika toggle false, hentikan fungsi

    if character == LocalPlayer.Character then return end -- Abaikan pemain lokal

    local player = Players:GetPlayerFromCharacter(character)
    if not player then return end -- Jika tidak ada pemain, hentikan

    local playerrole = player:FindFirstChild("PlayerRole")
    local localRole = LocalPlayer:FindFirstChild("PlayerRole")

    -- Abaikan jika noGhostEnabled aktif dan PlayerRole = "Dead"
    if noGhostEnabled and playerrole and playerrole.Value == "Dead" then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            rootPart.Size = Vector3.new(2, 2, 1) -- Reset ukuran ke default
            rootPart.Transparency = 0 -- Reset transparansi ke default
            rootPart.Material = Enum.Material.SmoothPlastic -- Reset material ke default
            rootPart.Color = Color3.new(1, 1, 1) -- Reset warna ke putih
        end
        return
    end

    -- Abaikan jika teamCheckEnabled aktif dan PlayerRole sama
    if teamCheckEnabled and localRole and playerrole and localRole.Value == playerrole.Value then
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            rootPart.Size = Vector3.new(2, 2, 1) -- Reset ukuran ke default
            rootPart.Transparency = 0 -- Reset transparansi ke default
            rootPart.Material = Enum.Material.SmoothPlastic -- Reset material ke default
            rootPart.Color = Color3.new(1, 1, 1) -- Reset warna ke putih
        end
        return
    end

    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if rootPart then
        rootPart.Size = humanoidRootPartSize -- Terapkan ukuran
        rootPart.Transparency = humanoidRootPartTransparency -- Terapkan transparansi
        rootPart.Material = humanoidRootPartMaterial -- Terapkan material

        -- Terapkan warna pelangi jika PlayerRole adalah "Neutral"
        if rainbowEnabled and playerrole and playerrole.Value == "Neutral" then
            task.spawn(function()
                while rootSizeEnabled and playerrole.Value == "Neutral" do
                    rootPart.Color = getRainbowColor() -- Terapkan warna pelangi
                    task.wait(0.1) -- Perbarui warna setiap 0.1 detik
                end
            end)
        end
    end
end

-- Function untuk memantau perubahan pada PlayerRole
local function monitorPlayerRole(player)
    if player == LocalPlayer then return end -- Abaikan pemain lokal

    -- Function untuk menangani perubahan PlayerRole
    local function onRoleChanged()
        if player.Character then
            updateHumanoidRootPart(player.Character) -- Perbarui hitbox saat PlayerRole berubah
        end
    end

    -- Pantau jika PlayerRole sudah ada
    local playerRole = player:FindFirstChild("PlayerRole")
    if playerRole then
        playerRole:GetPropertyChangedSignal("Value"):Connect(onRoleChanged)
        onRoleChanged() -- Terapkan perubahan awal
    else
        -- Tunggu hingga PlayerRole muncul
        player.ChildAdded:Connect(function(child)
            if child.Name == "PlayerRole" then
                child:GetPropertyChangedSignal("Value"):Connect(onRoleChanged)
                onRoleChanged() -- Terapkan perubahan awal
            end
        end)
    end
end

-- Function untuk memantau karakter pemain
local function onCharacterAdded(character)
    if character == LocalPlayer.Character then return end -- Abaikan pemain lokal
    character:WaitForChild("Humanoid") -- Tunggu hingga karakter sepenuhnya dimuat
    updateHumanoidRootPart(character) -- Terapkan pengaturan awal

    -- Hubungkan ke PlayerRole jika belum dilakukan
    local player = Players:GetPlayerFromCharacter(character)
    if player then
        monitorPlayerRole(player)
    end
end

-- Function untuk memantau pemain baru
local function onPlayerAdded(player)
    if player == LocalPlayer then return end -- Abaikan pemain lokal

    player.CharacterAdded:Connect(onCharacterAdded) -- Pantau karakter baru pemain
    if player.Character then
        onCharacterAdded(player.Character) -- Jika karakter sudah ada, atur ukurannya
    end

    monitorPlayerRole(player) -- Pantau perubahan PlayerRole
end

-- Pantau semua pemain saat ini
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        onPlayerAdded(player) -- Atur listener untuk setiap pemain yang sudah ada
    end
end

-- Pantau pemain yang baru masuk
Players.PlayerAdded:Connect(onPlayerAdded)

-- Function untuk mengatur ulang semua HumanoidRootPart saat toggle dinonaktifkan
local function resetRootParts()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                rootPart.Size = Vector3.new(2, 2, 1)
                rootPart.Transparency = 0 -- Reset transparansi ke default
                rootPart.Material = Enum.Material.SmoothPlastic
                rootPart.Color = Color3.new(1, 1, 1) -- Reset warna ke putih
            end
        end
    end
end

-- Function untuk mengaktifkan/menonaktifkan rootSizeEnabled
local function toggleRootSize(value)
    rootSizeEnabled = value
    if not value then
        resetRootParts() -- Reset semua hitbox saat toggle dimatikan
    else
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character and player ~= LocalPlayer then
                updateHumanoidRootPart(player.Character) -- Perbarui hitbox saat toggle diaktifkan
            end
        end
    end
end

-- Function untuk memperbarui semua hitbox saat noGhostEnabled atau teamCheckEnabled berubah
local function updateAllHitboxes()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player ~= LocalPlayer then
            updateHumanoidRootPart(player.Character)
        end
    end
end

-- Toggle rootSizeEnabled
local Toggle = Tab:CreateToggle({
    Name = "Enable Hitbox",
    CurrentValue = false,
    Flag = "EnableHitboxToggle",
    Callback = function(value)
        toggleRootSize(value)
    end
})

-- Slider untuk mengatur ukuran hitbox
local Slider = Tab:CreateSlider({
    Name = "Size",
    Range = {3, 20},
    Increment = 0.5,
    CurrentValue = 2,
    Flag = "SizeSlider",
    Callback = function(value)
        humanoidRootPartSize = Vector3.new(value, value, value)
        if rootSizeEnabled then
            updateAllHitboxes() -- Perbarui semua hitbox saat ukuran diubah
        end
    end
})

-- Slider untuk mengatur transparansi hitbox
local TransparencySlider = Tab:CreateSlider({
    Name = "Transparency",
    Range = {0, 1},
    Increment = 0.1,
    CurrentValue = 0,
    Flag = "TransparencySlider",
    Callback = function(value)
        humanoidRootPartTransparency = value
        if rootSizeEnabled then
            updateAllHitboxes() -- Perbarui semua hitbox saat transparansi diubah
        end
    end
})

-- Dropdown untuk memilih material hitbox
local Dropdown = Tab:CreateDropdown({
    Name = "Material",
    Options = {"SmoothPlastic", "Neon", "ForceField", "Glass", "Wood"},
    CurrentOption = {"SmoothPlastic"},
    MultipleOptions = false,
    Flag = "MaterialDropdown",
    Callback = function(option)
        humanoidRootPartMaterial = Enum.Material[option[1]]
        if rootSizeEnabled then
            updateAllHitboxes() -- Perbarui semua hitbox saat material diubah
        end
    end
})

-- Toggle untuk No Ghost
local NoGhostToggle = Tab:CreateToggle({
    Name = "No Ghost",
    CurrentValue = false,
    Flag = "NoGhostToggle",
    Callback = function(value)
        noGhostEnabled = value
        if rootSizeEnabled then
            updateAllHitboxes() -- Perbarui semua hitbox saat No Ghost diubah
        end
    end
})

-- Toggle untuk Team Check
local TeamCheckToggle = Tab:CreateToggle({
    Name = "Team Check",
    CurrentValue = false,
    Flag = "TeamCheckToggle",
    Callback = function(value)
        teamCheckEnabled = value
        if rootSizeEnabled then
            updateAllHitboxes() -- Perbarui semua hitbox saat Team Check diubah
        end
    end
})
local Section = Tab:CreateSection("Esp")
local Tab = Window:CreateTab("Player", 4483362458) -- Title, Image
local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

local Input = Tab:CreateInput({
    Name = "Set Speed",
    CurrentValue = "",
    PlaceholderText = "Type 'speed <value>' and press Enter",
    RemoveTextAfterFocusLost = false,
    Flag = "InputSpeed",
    Callback = function(Text)
        -- Memeriksa apakah input dimulai dengan "speed"
        if Text:lower():sub(1, 5) == "speed" then
            -- Mengambil nilai kecepatan dari input
            local speedValue = tonumber(Text:sub(7))
            if speedValue then
                -- Mengatur kecepatan Humanoid
                Humanoid.WalkSpeed = speedValue
                print("Speed set to:", speedValue)
            else
                print("Invalid speed value. Please type 'speed <number>'.")
            end
        else
            print("Invalid command. Please type 'speed <number>'.")
        end
    end,
})
local Player = game.Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")

local infJump
local infJumpDebounce = false

local Toggle = Tab:CreateToggle({
    Name = "Infinity Jump",
    CurrentValue = false,
    Flag = "ToggleInfinityJump", -- Pastikan flag ini unik
    Callback = function(Value)
        if Value then
            -- Aktifkan infinity jump
            if infJump then
                infJump:Disconnect() -- Putuskan koneksi sebelumnya jika ada
            end
            infJumpDebounce = false
            infJump = UserInputService.JumpRequest:Connect(function()
                if not infJumpDebounce then
                    infJumpDebounce = true
                    Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                    wait() -- Menunggu sejenak untuk menghindari spam lompatan
                    infJumpDebounce = false
                end
            end)
        else
            -- Nonaktifkan infinity jump
            if infJump then
                infJump:Disconnect()
                infJump = nil
            end
        end
    end,
})
local Tab = Window:CreateTab("Misc", 4483362458) -- Title, Image
local Section = Tab:CreateSection("Another script")
local Paragraph = Tab:CreateParagraph({Title = "Warning🔴", Content = "Don't Open Dex and infinite yield (RISK) ban"})
local Button = Tab:CreateButton({
   Name = "walkfling gui",
   Callback = function()
      loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/fe/main/obf_rf6iQURzu1fqrytcnLBAvW34C9N55kS9g9G3CKz086rC47M6632sEd4ZZYB0AYgV.lua.txt'),true))()
   end,
})local Button = Tab:CreateButton({
   Name = "IY SC",
   Callback = function()
   loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
   end,
})
Rayfield:Notify({
   Title = "Welcome",
   Content = "whysoserius?",
   Duration = 6.5,
   Image = 4483362458,
})
